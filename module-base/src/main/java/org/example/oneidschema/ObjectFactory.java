//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.02.13 at 09:10:50 PM AEDT 
//


package org.example.oneidschema;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.example.oneidschema package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.example.oneidschema
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Events }
     * 
     */
    public Events createEvents() {
        return new Events();
    }

    /**
     * Create an instance of {@link ScheduledEvent }
     * 
     */
    public ScheduledEvent createScheduledEvent() {
        return new ScheduledEvent();
    }

    /**
     * Create an instance of {@link Allocations }
     * 
     */
    public Allocations createAllocations() {
        return new Allocations();
    }

    /**
     * Create an instance of {@link ContactAllocation }
     * 
     */
    public ContactAllocation createContactAllocation() {
        return new ContactAllocation();
    }

    /**
     * Create an instance of {@link Activities }
     * 
     */
    public Activities createActivities() {
        return new Activities();
    }

    /**
     * Create an instance of {@link ActivityEvent }
     * 
     */
    public ActivityEvent createActivityEvent() {
        return new ActivityEvent();
    }

    /**
     * Create an instance of {@link Recurringactivity }
     * 
     */
    public Recurringactivity createRecurringactivity() {
        return new Recurringactivity();
    }

    /**
     * Create an instance of {@link RecurringActivityEvent }
     * 
     */
    public RecurringActivityEvent createRecurringActivityEvent() {
        return new RecurringActivityEvent();
    }

    /**
     * Create an instance of {@link Attendee }
     * 
     */
    public Attendee createAttendee() {
        return new Attendee();
    }

    /**
     * Create an instance of {@link Organisation }
     * 
     */
    public Organisation createOrganisation() {
        return new Organisation();
    }

    /**
     * Create an instance of {@link WaitList }
     * 
     */
    public WaitList createWaitList() {
        return new WaitList();
    }

    /**
     * Create an instance of {@link Booking }
     * 
     */
    public Booking createBooking() {
        return new Booking();
    }

    /**
     * Create an instance of {@link Attendance }
     * 
     */
    public Attendance createAttendance() {
        return new Attendance();
    }

    /**
     * Create an instance of {@link EventFacilitator }
     * 
     */
    public EventFacilitator createEventFacilitator() {
        return new EventFacilitator();
    }

    /**
     * Create an instance of {@link Person }
     * 
     */
    public Person createPerson() {
        return new Person();
    }

    /**
     * Create an instance of {@link ScheduledContact }
     * 
     */
    public ScheduledContact createScheduledContact() {
        return new ScheduledContact();
    }

    /**
     * Create an instance of {@link Contactee }
     * 
     */
    public Contactee createContactee() {
        return new Contactee();
    }

    /**
     * Create an instance of {@link Contactor }
     * 
     */
    public Contactor createContactor() {
        return new Contactor();
    }

    /**
     * Create an instance of {@link Participation }
     * 
     */
    public Participation createParticipation() {
        return new Participation();
    }

}
